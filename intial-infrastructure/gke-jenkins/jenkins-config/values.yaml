controller:
  tag: "2.318-jdk11"
  installPlugins:
    - kubernetes:1.30.5
    - workflow-job:2.42
    - workflow-aggregator:2.6
    - credentials-binding:1.27
    - git:4.9.0
    - google-oauth-plugin:1.0.6
    - google-source-plugin:0.4
    - google-kubernetes-engine:0.8.6
    - google-storage-plugin:1.5.4
    - blueocean:1.25.1
    - job-dsl:1.78.1
    - configuration-as-code:1.54
    - github-oauth:0.34
  resources:
    requests:
      cpu: "50m"
      memory: "1024Mi"
    limits:
      cpu: "1"
      memory: "2500Mi"
  javaOpts: "-Xms2500m -Xmx2500m"
  serviceType: ClusterIP
  agent:
    resources:
      requests:
        cpu: "500m"
        memory: "256Mi"
      limits:
        cpu: "1"
        memory: "512Mi"
  persistence:
    size: 100Gi
  serviceAccount:
    name: cd-jenkins
    podTemplates:
      terraform: |
        - name: terraform
          label: terraform-exec
          serviceAccount: ${jenkins-k8s-config-jenkins-tf-ksa}
          containers:
            - name: terraform
              image: "hashicorp/terraform:1.0.10"
              command: "/bin/sh -c"
              alwaysPullImage: false
              args: "cat"
              ttyEnabled: true
              resourceRequestCpu: "100m"
              resourceLimitCpu: "500m"
              resourceRequestMemory: "500Mi"
              resourceLimitMemory: "1Gi"
  additionalExistingSecrets:
    - name: git-credentials
      keyName: git-app-id
    - name: git-credentials
      keyName: git-private-key
    - name: jenkins-k8s-config
      keyName: project-id
    - name: jenkins-k8s-config
      keyName: jenkins-tf-ksa

  JCasC:
    defaultConfig: true
    configScripts:
      credentials: |
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - gitHubApp:
                      id: "github-org"
                      appID: ${git-credentials-git-app-id}
                      privateKey: ${git-credentials-git-private-key}
      init-jobs: |
        jobs:
          - script: >
                multibranchPipelineJob('create-environments') {
                    factory {
                      workflowBranchProjectFactory {
                          scriptPath('environments/Jenkinsfile')
                      }
                    }
                    branchSources {
                      github {
                          id('23232323')
                          scanCredentialsId('github-org')
                          repoOwner("AwesomeOrderingSystem")
                          repository("gcp-enviroment")
                          buildOriginBranch(true)
                          buildOriginPRMerge(true)
                          includes("dev prod PR*")
                      }
                    }
                    orphanedItemStrategy {
                      discardOldItems {
                          numToKeep(10)
                      }
                    }
                    triggers {
                      cron('@daily')
                    }
                }